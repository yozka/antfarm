#include "aaActor.h"

///-------------------------------------------------------------------------
using namespace Anthill;
///-------------------------------------------------------------------------





 ///------------------------------------------------------------------------
///
///
///
/// Constructor
///
///
///-------------------------------------------------------------------------
AActor::AActor()
{


}
///-------------------------------------------------------------------------





 ///------------------------------------------------------------------------
///
///
///
/// Destructor
///
///
///-------------------------------------------------------------------------
AActor::~AActor()
{
}
///-------------------------------------------------------------------------






 ///------------------------------------------------------------------------
///
///
///
/// установка текущего мира
///
///
///-------------------------------------------------------------------------
void AActor :: setWorld(const std::weak_ptr<AWorld> &world)
{
	mWorld = world;
}
///-------------------------------------------------------------------------




 ///------------------------------------------------------------------------
///
///
///
/// возвратим мир, 
/// внимание не надо его удерживать!!! не сохроняйте ссылку на мир
///
///
///-------------------------------------------------------------------------
std::shared_ptr<AWorld> AActor::world()const
{
	return mWorld.lock();
}
///-------------------------------------------------------------------------







 ///------------------------------------------------------------------------
///
///
///
/// Текущая позиция
///
///
///-------------------------------------------------------------------------
void AActor :: setPosition(const TPointF &pt)
{
	mPosition = pt;
}
///-------------------------------------------------------------------------





 ///------------------------------------------------------------------------
///
///
///
/// размер актора
///
///
///-------------------------------------------------------------------------
void AActor :: setSize(const TPointF &sz)
{
	mSize = sz;
}
///-------------------------------------------------------------------------





 ///------------------------------------------------------------------------
///
///
///
/// поворот актора
///
///
///-------------------------------------------------------------------------
void AActor::setAngle(const float angle)
{
	mAngle = angle;
}
///-------------------------------------------------------------------------






 ///------------------------------------------------------------------------
///
///
///
/// добавление компанента
///
///
///-------------------------------------------------------------------------
void AActor::append(const PActorComponent &component)
{
	component->setActor(weak_from_this());
	mComponents.push_back(component);
}
///-------------------------------------------------------------------------





 ///------------------------------------------------------------------------
///
///
///
/// удаление компанента
///
///
///-------------------------------------------------------------------------
void AActor::remove(const PActorComponent &component)
{
	component->setActor(PActor());

	const auto item = std::find(mComponents.cbegin(), mComponents.cend(), component);
	if (item != mComponents.cend())
	{
		mComponents.erase(item);
	}
}
///-------------------------------------------------------------------------





 ///------------------------------------------------------------------------
///
///
///
/// Обработка компаненнтов
///
///
///-------------------------------------------------------------------------
void AActor::update(const float timeSpan)
{
	for (const auto &component : mComponents)
	{
		component->update(timeSpan);
	}
}