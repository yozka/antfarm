#pragma once
#include <memory>


namespace Formicarium
{
	///-------------------------------------------------------------------------
	class AActor;
	///-------------------------------------------------------------------------





	 ///------------------------------------------------------------------------
	///
	///
	///
	/// Компанент элемента
	///
	///
	///-------------------------------------------------------------------------
	class AActorComponent
	{
	public:


		AActorComponent();
		virtual ~AActorComponent();



		void setActor(const std::weak_ptr<AActor> &parent);
		std::shared_ptr<AActor> actor() const; //внимание вы не должны ударживать родителя, и наче он не сожмет удалится корректно


	public:


		virtual void update(const float timeSpan) {};


	///-------------------------------------------------------------------------
	///-------------------------------------------------------------------------
	private:


		std::weak_ptr<AActor> mParent;


	};
	///-------------------------------------------------------------------------



	///-------------------------------------------------------------------------
	using PActorComponent = std::shared_ptr<AActorComponent>;
	///-------------------------------------------------------------------------



}
